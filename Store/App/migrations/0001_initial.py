# Generated by Django 4.2.6 on 2023-12-09 12:20

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('but_date', models.DateTimeField(auto_now=True)),
                ('buyer_name', models.CharField(max_length=100)),
                ('price', models.FloatField(default=0.0)),
                ('out_number', models.CharField(max_length=100)),
                ('catigory', models.CharField(max_length=100)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('total_price', models.FloatField(default=0.0)),
                ('item_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Histories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('but_date', models.DateTimeField(auto_now=True)),
                ('buyer_name', models.CharField(max_length=100)),
                ('out_number', models.CharField(max_length=100)),
                ('catigory', models.CharField(max_length=100)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('price', models.FloatField(default=0.0)),
                ('Item_name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('out_number', models.CharField(max_length=100)),
                ('catigory', models.CharField(max_length=100, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('old_price', models.FloatField(default=0.0)),
                ('color', models.CharField(max_length=100, null=True)),
                ('picture', models.ImageField(upload_to='picture')),
                ('total_quantity', models.PositiveIntegerField(default=0)),
                ('available', models.BooleanField(default=True)),
                ('add_to_store', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_date', models.DateTimeField(auto_now=True)),
                ('sender_name', models.CharField(max_length=100)),
                ('sender_number', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('number', models.IntegerField(default=0, null=True)),
                ('block', models.BooleanField(default=False)),
                ('gender', models.CharField(max_length=10)),
                ('position', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SellReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_price', models.FloatField(default=0.0)),
                ('item_quantity', models.PositiveIntegerField(default=0)),
                ('sell_time', models.DateTimeField(auto_now=True)),
                ('item_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item', to='App.items')),
            ],
        ),
    ]
